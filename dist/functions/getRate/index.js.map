{"version":3,"file":"index.js","names":["typeOfMsg","buttonReplyID","recipientPhone","message_id","res","connection","query","err","fields","message","rows","JSON","parse","stringify","i","length","concat","titleCase","name","toLowerCase","replace","Whatsapp","sendText","markMessageAsRead","sendStatus"],"sources":["../../../src/functions/getRate/index.js"],"sourcesContent":["'use strict';\nimport Whatsapp from '../../config/whatsapp';\nimport connection from '../../config/db';\nimport { titleCase } from '../../routes';\n\n/**\n    This function updates the customer's latest question in the database\n    and sends a message asking them to select a destination region.\n*/\n\nexport default async function (\n    typeOfMsg,\n    buttonReplyID,\n    recipientPhone,\n    message_id,\n    res\n) {\n    if (typeOfMsg === 'simple_button_message' && buttonReplyID === 'get_rate') {\n        // update latest question\n        connection.query(\n            `UPDATE whatsapp_cloud SET latest_question = 'select destination region' WHERE phone_no = '${recipientPhone}';`,\n            (err, res, fields) => {\n                if (err) throw err;\n            }\n        );\n\n        // send \"select destination region\" + destination regions (list)\n        let message = '';\n        connection.query(\n            `SELECT name FROM regions`,\n            async (err, rows, fields) => {\n                if (err) throw err;\n                rows = JSON.parse(JSON.stringify(rows));\n                for (let i = 0; i < rows.length; i++) {\n                    message = message.concat(\n                        `${i + 1}. ${titleCase(\n                            rows[i].name.toLowerCase().replace(' region', '')\n                        )}\\n`\n                    );\n                }\n\n                await Whatsapp.sendText({\n                    recipientPhone: recipientPhone,\n                    message: 'Select destination region\\n\\n' + message,\n                });\n            }\n        );\n        await Whatsapp.markMessageAsRead({\n            message_id,\n        });\n        // break\n        return res.sendStatus(200);\n    }\n}\n"],"mappings":"AAAA,YAAY;;AAAC;EAAA;AAAA;AAAA;AACb;AACA;AACA;AAAyC;AAAA;AAAA,+CAFzC;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAHA;EAAA;AAAA;AAAA;EAAA,kEAKe,kBACXA,SAAS,EACTC,aAAa,EACbC,cAAc,EACdC,UAAU,EACVC,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA,MAECJ,SAAS,KAAK,uBAAuB,IAAIC,aAAa,KAAK,UAAU;YAAA;YAAA;UAAA;UACrE;UACAI,cAAU,CAACC,KAAK,qGACiFJ,cAAc,SAC3G,UAACK,GAAG,EAAEH,GAAG,EAAEI,MAAM,EAAK;YAClB,IAAID,GAAG,EAAE,MAAMA,GAAG;UACtB,CAAC,CACJ;;UAED;UACIE,OAAO,GAAG,EAAE;UAChBJ,cAAU,CAACC,KAAK;YAAA,uEAEZ,iBAAOC,GAAG,EAAEG,IAAI,EAAEF,MAAM;cAAA;cAAA;gBAAA;kBAAA;oBAAA,KAChBD,GAAG;sBAAA;sBAAA;oBAAA;oBAAA,MAAQA,GAAG;kBAAA;oBAClBG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,IAAI,CAAC,CAAC;oBACvC,KAASI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;sBAClCL,OAAO,GAAGA,OAAO,CAACO,MAAM,WACjBF,CAAC,GAAG,CAAC,eAAK,IAAAG,iBAAS,EAClBP,IAAI,CAACI,CAAC,CAAC,CAACI,IAAI,CAACC,WAAW,EAAE,CAACC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CACpD,QACJ;oBACL;oBAAC;oBAAA,OAEKC,oBAAQ,CAACC,QAAQ,CAAC;sBACpBpB,cAAc,EAAEA,cAAc;sBAC9BO,OAAO,EAAE,+BAA+B,GAAGA;oBAC/C,CAAC,CAAC;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA,CACL;YAAA;cAAA;YAAA;UAAA,IACJ;UAAC;UAAA,OACIY,oBAAQ,CAACE,iBAAiB,CAAC;YAC7BpB,UAAU,EAAVA;UACJ,CAAC,CAAC;QAAA;UAAA,kCAEKC,GAAG,CAACoB,UAAU,CAAC,GAAG,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAEjC;EAAA;AAAA"}