{"version":3,"file":"index.js","names":["router","require","Router","get","req","res","testWaCallbackUrl","error","console","sendStatus","post","log","data","Whatsapp","parseMessage","body","isMessage","incomingMessage","message","recipientPhone","from","phone","recipientName","name","typeOfMsg","type","message_id","textMessage","text","includes","trim","toLowerCase","connection","query","err","fields","sendSimpleButtons","listOfButtons","title","id","markMessageAsRead","getRate","button_reply","selectDestination","selectPickup","selectContainerType","selectContainerNum","sdrAction","flag","Boolean","spdAction","rows","destination_region","pickups","i","length","push","stcAction","ncAction","no_of_container","container_type","pickup_destination","rate","rate_twenty","sendText","rate_forty","titleCase","str","splitStr","split","charAt","toUpperCase","substring","join","module","exports"],"sources":["../../src/routes/index.js"],"sourcesContent":["'use strict';\n\nimport Whatsapp from '../config/whatsapp';\nimport connection from '../config/db';\nimport testWaCallbackUrl from '../helpers/testWaCallbackUrl';\nimport getRate from '../functions/getRate';\nimport selectDestination from '../functions/getRate/selectDestination';\nimport selectPickup from '../functions/getRate/selectPickup';\nimport selectContainerType from '../functions/getRate/selectContainerType';\nimport selectContainerNum from '../functions/getRate/selectContainerNum';\n\nconst router = require('express').Router();\n\nrouter.get('/meta_wa_callbackurl', (req, res) => {\n    try {\n        testWaCallbackUrl(req, res);\n    } catch (error) {\n        console.error({ error });\n        return res.sendStatus(500);\n    }\n});\n\nrouter.post('/meta_wa_callbackurl', async (req, res) => {\n    console.log('POST: Someone is pinging me!');\n\n    try {\n        let data = Whatsapp.parseMessage(req.body);\n\n        console.log('dataxx', data);\n        // console.log('req.body', req.body.entry[0].changes)\n        // data.notificationMessage && console.log(\"CONVERSATIONXX\", data.notificationMessage.conversation.origin )\n\n        if (data?.isMessage) {\n            let incomingMessage = data.message;\n            let recipientPhone = incomingMessage.from.phone; // extract the phone number of sender\n            let recipientName = incomingMessage.from.name;\n            let typeOfMsg = incomingMessage.type; // extract the type of message (some are text, others are images, others are responses to buttons etc...)\n            let message_id = incomingMessage.message_id; // extract the message id\n            let textMessage = incomingMessage.text?.body; // extract text message body\n\n            // if msg === \"hi\" ///////////////////////////////////////////////////////////////\n            if (\n                textMessage &&\n                ['hi', 'hello'].includes(textMessage.trim().toLowerCase())\n            ) {\n                connection.query(\n                    `INSERT INTO whatsapp_cloud (phone_no, username) VALUES ('${recipientPhone}', '${recipientName}');`,\n                    (err, res, fields) => {\n                        if (err) {\n                            connection.query(\n                                `UPDATE whatsapp_cloud SET latest_question = 'new' WHERE phone_no = '${recipientPhone}';`,\n                                (err, res, fields) => {\n                                    if (err) throw err;\n                                }\n                            );\n                        }\n                    }\n                );\n\n                await Whatsapp.sendSimpleButtons({\n                    message: `Welcome to CAS BROKER, ${recipientName}.\\nWhat do you want to do?`,\n                    recipientPhone: recipientPhone,\n                    listOfButtons: [\n                        {\n                            title: 'Get rate',\n                            id: 'get_rate',\n                        },\n                        // {\n                        //   title: \"Find load\",\n                        //   id: \"find_load\",\n                        // },\n                        // {\n                        //   title: \"Speak to a human\",\n                        //   id: \"speak_to_human\",\n                        // },\n                    ],\n                });\n                await Whatsapp.markMessageAsRead({\n                    message_id,\n                });\n                return res.sendStatus(200); // break\n            }\n            // End if msg === \"hi\" ////////////////////////////////////////////////////////////////////////\n\n            //////////////////////  button_reply == \"get_rate\"  //////////////////////////////////////////////\n            await getRate(\n                typeOfMsg,\n                incomingMessage.button_reply.id,\n                recipientPhone,\n                message_id,\n                res\n            );\n            /////////////////////////////////////////////////////////////////////////////////////////\n\n            //////////////////////  if latest_question == \"select destination region\" ///////////////////////////\n            await selectDestination(\n                recipientPhone,\n                textMessage,\n                res,\n                message_id\n            );\n            /////////////////////////////////////////////////////////////////////////////////////////\n\n            //////////////////////  if latest_question == \"select pickup destination\": /////////////////////////\n            await selectPickup(recipientPhone, textMessage, message_id, res);\n            /////////////////////////////////////////////////////////////////////////////////////////\n\n            //////////////////////  if latest_question == \"select type of container\"  /////////////////////////\n            await selectContainerType(\n                typeOfMsg,\n                incomingMessage,\n                recipientPhone,\n                message_id,\n                res\n            );\n            /////////////////////////////////////////////////////////////////////////////////////////\n\n            //////////////////////  if latest_question == \"number of containers\"  /////////////////////////\n            await selectContainerNum(\n                recipientPhone,\n                textMessage,\n                message_id,\n                res\n            );\n            /////////////////////////////////////////////////////////////////////////////////////////\n        }\n        return res.sendStatus(200);\n    } catch (error) {\n        console.error({ error });\n        return res.sendStatus(500);\n    }\n\n    //   connection.end()\n});\n\nexport function sdrAction(message, recipientPhone) {\n    let flag = 0;\n    connection.query(\n        `UPDATE whatsapp_cloud SET destination_region = '${message}' WHERE phone_no = '${recipientPhone}';`,\n        (err, res, fields) => {\n            if (err) flag = 1;\n        }\n    );\n\n    connection.query(\n        `UPDATE whatsapp_cloud SET latest_question = 'select pickup destination' WHERE phone_no = '${recipientPhone}';`,\n        (err, res, fields) => {\n            if (err) flag = 1;\n        }\n    );\n    return !Boolean(flag);\n}\n\nexport function spdAction(message, recipientPhone) {\n    let flag = 0;\n\n    connection.query(\n        `SELECT destination_region FROM whatsapp_cloud WHERE phone_no = '${recipientPhone}'`,\n        async (err, rows, fields) => {\n            if (err) throw err;\n\n            connection.query(\n                `SELECT name FROM destinationrates WHERE region_id = '${rows[0].destination_region}'`,\n                async (err, rows, fields) => {\n                    if (err) throw err;\n\n                    let pickups = ['_'];\n\n                    for (let i = 0; i < rows.length; i++) {\n                        pickups.push(rows[i].name);\n                    }\n\n                    connection.query(\n                        `UPDATE whatsapp_cloud SET pickup_destination = '${pickups[message]}' WHERE phone_no = '${recipientPhone}';`,\n                        (err, res, fields) => {\n                            if (err) flag = 1;\n                        }\n                    );\n                }\n            );\n\n            connection.query(\n                `UPDATE whatsapp_cloud SET latest_question = 'select type of container' WHERE phone_no = '${recipientPhone}';`,\n                (err, res, fields) => {\n                    if (err) flag = 1;\n                }\n            );\n        }\n    );\n    return !Boolean(flag);\n}\n\nexport function stcAction(message, recipientPhone) {\n    let flag = 0;\n    connection.query(\n        `UPDATE whatsapp_cloud SET container_type = '${message}' WHERE phone_no = '${recipientPhone}';`,\n        (err, res, fields) => {\n            if (err) flag = 1;\n        }\n    );\n\n    connection.query(\n        `UPDATE whatsapp_cloud SET latest_question = 'number of containers' WHERE phone_no = '${recipientPhone}';`,\n        (err, res, fields) => {\n            if (err) flag = 1;\n        }\n    );\n    return !Boolean(flag);\n}\n\nexport function ncAction(message, recipientPhone) {\n    let flag = 0;\n    let no_of_container = message;\n    connection.query(\n        `UPDATE whatsapp_cloud SET no_of_container = '${no_of_container}' WHERE phone_no = '${recipientPhone}';`,\n        (err, res, fields) => {\n            if (err) flag = 1;\n        }\n    );\n\n    connection.query(\n        `UPDATE whatsapp_cloud SET latest_question = 'new' WHERE phone_no = '${recipientPhone}';`,\n        (err, res, fields) => {\n            if (err) flag = 1;\n        }\n    );\n\n    // calc rate\n    connection.query(\n        `SELECT * FROM whatsapp_cloud WHERE phone_no = '${recipientPhone}'`,\n        async (err, rows, fields) => {\n            if (err) throw err;\n            let container_type = rows[0].container_type;\n            let destination_region = rows[0].destination_region;\n            let pickup_destination = rows[0].pickup_destination;\n\n            if (container_type === 'container_20') {\n                connection.query(\n                    `SELECT rate_twenty FROM destinationrates WHERE region_id = '${destination_region}' AND name = '${pickup_destination}'`,\n                    async (err, rows, fields) => {\n                        if (err) throw err;\n                        let rate = rows[0].rate_twenty * no_of_container;\n\n                        await Whatsapp.sendText({\n                            recipientPhone: recipientPhone,\n                            message: `The rate is: GHC ${rate}`,\n                        });\n                    }\n                );\n            }\n\n            if (container_type === 'container_40') {\n                connection.query(\n                    `SELECT rate_forty FROM destinationrates WHERE region_id = '${destination_region}' AND name = '${pickup_destination}'`,\n                    async (err, rows, fields) => {\n                        if (err) throw err;\n                        let rate = rows[0].rate_forty * no_of_container;\n\n                        await Whatsapp.sendText({\n                            recipientPhone: recipientPhone,\n                            message: `The rate is: GHC ${rate}`,\n                        });\n                    }\n                );\n            }\n        }\n    );\n\n    return !Boolean(flag);\n}\n\nexport function titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        // You do not need to check if i is larger than splitStr length, as your for does that for you\n        // Assign it back to the array\n        splitStr[i] =\n            splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    // Directly return the joined string\n    return splitStr.join(' ');\n}\n\nmodule.exports = router;\n"],"mappings":"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"}